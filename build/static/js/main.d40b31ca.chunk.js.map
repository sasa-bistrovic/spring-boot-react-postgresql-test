{"version":3,"sources":["http-common.js","services/product.service.js","App.js","components/add-product.component.js","components/product.component.js","components/products-list.component.js","serviceWorker.js","index.js"],"names":["axios","create","headers","window","location","protocol","http","defaults","baseURL","get","id","data","post","put","delete","name","Add","Component","props","handleClick","event","state","currentProduct2","currentIndex","retrieveProducts2","submitted","message","setState","DataisLoaded","code","pricehrk","priceeur","description","isAvailable","clickevent","handleClick1","handleClick2","getProduct","onChangeSearchName2","bind","refreshList2","setActiveProduct2","removeAllProducts2","searchName2","onChangeCode2","onChangeName2","onChangePricehrk2","onChangePriceeur2","onChangeDescription2","saveProduct2","newProduct2","onChangeCode","onChangeName","onChangePricehrk","onChangePriceeur","onChangeDescription","updateisAvailable","updateProduct","deleteProduct","clickevent1","clickevent2","clickevent3","products","currentProduct","searchName","eurconversion","seteurconversion","this","fetch","then","r","text","e","target","value","stringeur","toFixed","one","parseFloat","trim","length","isNaN","ProductDataService","response","console","log","catch","getAll","retrieveProducts","product","index","deleteAll","refreshList","findByName","prevState","status","two","update","Name","className","class","onClick","type","placeholder","onChange","map","style","color","backgroundColor","key","htmlFor","required","textAlign","disabled","Boolean","hostname","match","ReactDOM","render","path","component","App","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.d40b31ca.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport default axios.create({\r\n  headers: {\r\n    \"Content-type\": \"application/json\"\r\n  }\r\n});","import http from \"../http-common\";\r\n\r\nif (window.location.protocol === 'http:') {\r\n  http.defaults.baseURL = 'http://spring-boot-react-postgresql.herokuapp.com/api';\r\n}\r\n\r\nif (window.location.protocol !== 'http:') {\r\n  http.defaults.baseURL = 'https://spring-boot-react-postgresql.herokuapp.com/api';\r\n}\r\n\r\nclass ProductDataService {\r\n  getAll() {\r\n    return http.get(\"/products\");\r\n  }\r\n\r\n  get(id) {\r\n    return http.get(`/products/${id}`);\r\n  }\r\n\r\n  create(data) {\r\n    return http.post(\"/products\", data);\r\n  }\r\n\r\n  update(id, data) {\r\n    return http.put(`/products/${id}`, data);\r\n  }\r\n\r\n  delete(id) {\r\n    return http.delete(`/products/${id}`);\r\n  }\r\n\r\n  deleteAll() {\r\n    return http.delete(`/products`);\r\n  }\r\n\r\n  findByName(name) {\r\n    return http.get(`/products?name=${name}`);\r\n  }\r\n\r\n}\r\n\r\nexport default new ProductDataService();","import React, { Component, useState, useEffect, useNavigate } from \"react\";\r\nimport { Switch, Route, Link, useHistory, withRouter } from \"react-router-dom\";\r\nimport {browserHistory} from 'react-router';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport ProductDataService from \"./services/product.service\";\r\nimport \"./App.css\";\r\n\r\nimport AddProduct from \"./components/add-product.component\";\r\nimport Product from \"./components/product.component\";\r\nimport ProductsList from \"./components/products-list.component\";\r\n\r\n//class App extends Component {\r\n\r\n\r\n//const App = (props) =>  {\r\nexport default class Add extends Component {\r\nconstructor(props) {\r\n    super(props);\r\n    this.onChangeSearchName2 = this.onChangeSearchName2.bind(this);\r\n    this.retrieveProducts2 = this.retrieveProducts2.bind(this);\r\n    this.refreshList2 = this.refreshList2.bind(this);\r\n    this.setActiveProduct2 = this.setActiveProduct2.bind(this);\r\n    this.removeAllProducts2 = this.removeAllProducts2.bind(this);\r\n    this.searchName2 = this.searchName2.bind(this);\r\n\r\n    this.onChangeCode2 = this.onChangeCode2.bind(this);\r\n    this.onChangeName2 = this.onChangeName2.bind(this);\r\n    this.onChangePricehrk2 = this.onChangePricehrk2.bind(this);\r\n    this.onChangePriceeur2 = this.onChangePriceeur2.bind(this);\r\n    this.onChangeDescription2 = this.onChangeDescription2.bind(this);\r\n    this.saveProduct2 = this.saveProduct2.bind(this);\r\n    this.newProduct2 = this.newProduct2.bind(this);\r\n\r\n    this.onChangeCode = this.onChangeCode.bind(this);\r\n    this.onChangeName = this.onChangeName.bind(this);\r\n    this.onChangePricehrk = this.onChangePricehrk.bind(this);\r\n    this.onChangePriceeur = this.onChangePriceeur.bind(this);\r\n    this.onChangeDescription = this.onChangeDescription.bind(this);\r\n    this.getProduct = this.getProduct.bind(this);\r\n    this.updateisAvailable = this.updateisAvailable.bind(this);\r\n    this.updateProduct = this.updateProduct.bind(this);\r\n    this.deleteProduct = this.deleteProduct.bind(this);\r\n\r\n    this.clickevent1 = this.handleClick.bind(this);\r\n    this.clickevent2 = this.handleClick1.bind(this);\r\n    this.clickevent3 = this.handleClick2.bind(this);\r\n\r\n    this.state = {\r\n      products: [],\r\n      currentProduct: {\r\n        id: null,\r\n        code: \"\",\r\n        name: \"\",\r\n        pricehrk: \"\",\r\n        priceeur: \"\",\r\n        description: \"\",\r\n        isAvailable: false\r\n      },\r\n      currentProduct2: null,\r\n      currentIndex: -1,\r\n      searchName: \"\",\r\n      eurconversion: \"\",\r\n      message: \"\",\r\n      DataisLoaded: false,\r\n      id: null,\r\n      code: \"\",\r\n      name: \"\",\r\n      pricehrk: \"\",\r\n      priceeur: \"\",\r\n      description: \"\", \r\n      isAvailable: false,\r\n      submitted: false,\r\n      clickevent:1\r\n\r\n    };   \r\n    this.seteurconversion(); \r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.state.clickevent===1) {\r\n    this.retrieveProducts2();\r\n    }\r\n    if (this.state.clickevent===3) {\r\n    //this.getProduct(this.props.match.params.id);\r\n    this.getProduct(this.state.currentProduct2.id);\r\n    }\r\n  }\r\n\r\n seteurconversion () {\r\n    fetch('../eur_conversion')\r\n    .then((r) => r.text())\r\n    .then(text  => {\r\n      this.setState({\r\n      eurconversion: text\r\n    });\r\n    })  \r\n  } \r\n\r\n  onChangeCode2(e) {\r\n    this.setState({\r\n      code: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeName2(e) {\r\n    this.setState({\r\n      name: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangePricehrk2(e) {\r\n    let one = e.target.value;\r\n    let two = this.state.eurconversion;\r\n    let total = one / two;\r\n    //let stringhrk = ''+one;\r\n    let stringeur = total.toFixed(2);\r\n    this.setState({\r\n      pricehrk: e.target.value,\r\n      priceeur: stringeur\r\n    });\r\n  }\r\n\r\n  onChangePriceeur2(e) {\r\n    //let stringeur = ''+e.target.value;\r\n    this.setState({\r\n      priceeur: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeDescription2(e) {\r\n    this.setState({\r\n      description: e.target.value\r\n    });\r\n  }\r\n\t\r\n  saveProduct2() {\r\n    let one = parseFloat(this.state.pricehrk);\r\n\r\n    if (this.state.code.trim().length!=10) {\r\n        this.setState({\r\n           message: \"Code (unique) (exactly 10 character) !\"\r\n        });\r\n    return;\r\n    }\r\n\r\n    if ((this.state.pricehrk.trim() ==\"\") || (this.state.pricehrk.trim().length==0) || (isNaN(one))) {\r\n    one=0;\r\n    }\r\n \r\n    if (one<0) {\r\n    one=0;\r\n    }\r\n\r\n    one=one.toFixed(2);\r\n\r\n    let two = this.state.eurconversion;\r\n    let total = one / two;\r\n    let stringeur = total.toFixed(2);\r\n\r\n    this.setState({\r\n      pricehrk: one,\r\n      priceeur: stringeur\r\n    });\r\n\r\n    var data = {\r\n      code: this.state.code,\r\n      name: this.state.name,\r\n      pricehrk: one,\r\n      priceeur: stringeur,\r\n      description: this.state.description\r\n    };\r\n\r\n    ProductDataService.create(data)\r\n      .then(response => {\r\n        this.setState({\r\n          id: response.data.id,\r\n          code: response.data.code,\r\n          name: response.data.name,\r\n          pricehrk: response.data.pricehrk,\r\n          priceeur: response.data.priceeur,\r\n          description: response.data.description,\r\n          isAvailable: response.data.isAvailable,\r\n\r\n          submitted: true\r\n        });\r\n        this.setState({\r\n           message: \"\"\r\n        });\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  newProduct2() {\r\n    this.setState({\r\n      id: null,\r\n      code: \"\",\r\n      name: \"\",\r\n      pricehrk: \"\",\r\n      priceeur: \"\",\r\n      description: \"\",\r\n      isAvailable: false,\r\n\r\n      submitted: false\r\n    });\r\n  }\r\n\r\n  onChangeSearchName2(e) {\r\n    const searchName = e.target.value;\r\n\r\n    this.setState({\r\n      searchName: searchName\r\n    });\r\n  }\r\n\r\n  retrieveProducts2() {\r\n    ProductDataService.getAll()\r\n      .then(response => {\r\n        this.setState({\r\n          products: response.data\r\n        });\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  refreshList2() {\r\n    this.retrieveProducts();\r\n    this.setState({\r\n      currentProduct2: null,\r\n      currentIndex: -1\r\n    });\r\n  }\r\n\r\n  setActiveProduct2(product, index) {\r\n    this.setState({\r\n      currentProduct2: product,\r\n      currentIndex: index\r\n    });\r\n  }\r\n\r\n  removeAllProducts2() {\r\n    ProductDataService.deleteAll()\r\n      .then(response => {\r\n        console.log(response.data);\r\n        this.refreshList();\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  searchName2() {\r\n    this.setState({\r\n      currentProduct2: null,\r\n      currentIndex: -1\r\n    });\r\n\r\n    ProductDataService.findByName(this.state.searchName)\r\n      .then(response => {\r\n        this.setState({\r\n          products: response.data\r\n        });\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  onChangeCode(e) {\r\n    const code = e.target.value;\r\n\r\n    this.setState(function(prevState) {\r\n      return {\r\n        currentProduct: {\r\n          ...prevState.currentProduct,\r\n          code: code\r\n        }\r\n      };\r\n    });\r\n  }\r\n\r\n  onChangeName(e) {\r\n    const name = e.target.value;\r\n\r\n    this.setState(function(prevState) {\r\n      return {\r\n        currentProduct: {\r\n          ...prevState.currentProduct,\r\n          name: name\r\n        }\r\n      };\r\n    });\r\n  }\r\n\r\n  onChangePricehrk(e) {\r\n    const pricehrk = e.target.value;\r\n\r\n    let one = e.target.value;\r\n    let two = this.state.eurconversion;\r\n    let total = one / two;\r\n    let stringeur = total.toFixed(2);\r\n\r\n    this.setState(function(prevState) {\r\n      return {\r\n        currentProduct: {\r\n          ...prevState.currentProduct,\r\n          pricehrk: pricehrk,\r\n          priceeur: stringeur\r\n        }\r\n      };\r\n    });\r\n  }\r\n\r\n  onChangePriceeur(e) {\r\n    const priceeur = e.target.value;\r\n\r\n    this.setState(function(prevState) {\r\n      return {\r\n        currentProduct: {\r\n          ...prevState.currentProduct,\r\n          priceeur: priceeur\r\n        }\r\n      };\r\n    });\r\n  }\r\n\r\n  onChangeDescription(e) {\r\n    const description = e.target.value;\r\n    \r\n    this.setState(prevState => ({\r\n      currentProduct: {\r\n        ...prevState.currentProduct,\r\n        description: description\r\n      }\r\n    }));\r\n  }\r\n\r\n  getProduct(id) {\r\n    ProductDataService.get(id)\r\n      .then(response => {\r\n        this.setState({\r\n          currentProduct: response.data\r\n        });\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  updateisAvailable(status) {\r\n    let one = parseFloat(this.state.currentProduct.pricehrk);\r\n    \r\n    if (this.state.currentProduct.code.trim().length!=10) {\r\n        this.setState({\r\n           message: \"Code (unique) (exactly 10 character) !\"\r\n        });\r\n    return;\r\n    }\r\n\r\n    if ((this.state.currentProduct.pricehrk.trim() ==\"\") || (this.state.currentProduct.pricehrk.trim().length==0) || (isNaN(one))) {\r\n    one=0;\r\n    }\r\n\r\n    if (one<0) {\r\n    one=0;\r\n    }\r\n\r\n    one=one.toFixed(2);\r\n\r\n    let two = this.state.eurconversion;\r\n    let total = one / two;\r\n    let stringeur = total.toFixed(2);\r\n\r\n    this.setState(function(prevState) {\r\n      return {\r\n        currentProduct: {\r\n          ...prevState.currentProduct,\r\n          pricehrk: one,\r\n          priceeur: stringeur\r\n        }\r\n      };\r\n    });\r\n\r\n    var data = {\r\n      id: this.state.currentProduct.id,\r\n      code: this.state.currentProduct.code,\r\n      name: this.state.currentProduct.name,\r\n      pricehrk: one,\r\n      priceeur: stringeur,\r\n      description: this.state.currentProduct.description,\r\n      isAvailable: status\r\n    };\r\n\r\n    ProductDataService.update(this.state.currentProduct.id, data)\r\n      .then(response => {\r\n        this.setState(prevState => ({\r\n          currentProduct: {\r\n            ...prevState.currentProduct,\r\n            isAvailable: status\r\n          }\r\n        }));\r\n                if (status) {\r\n           \t   this.setState({\r\n                      message: \"Product is available !\"\r\n                   });\r\n\t\t} else\r\n                {\r\n           \t   this.setState({\r\n                      message: \"Product is not available !\"\r\n                   });\r\n\t\t}\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  updateProduct() {\r\n    let one = parseFloat(this.state.currentProduct.pricehrk);\r\n\r\n    if (this.state.currentProduct.code.trim().length!=10) {\r\n        this.setState({\r\n           message: \"Code (unique) (exactly 10 character) !\"\r\n        });\r\n        return;\r\n    }\r\n\r\n    if ((this.state.currentProduct.pricehrk.trim() ==\"\") || (this.state.currentProduct.pricehrk.trim().length==0) || (isNaN(one))) {\r\n    one=0;\r\n    }\r\n\r\n    if (one<0) {\r\n    one=0;\r\n    }\r\n\r\n    one=one.toFixed(2);\r\n    let two = this.state.eurconversion;\r\n    let total = one / two;\r\n    let stringeur = total.toFixed(2);\r\n\r\n    this.setState(function(prevState) {\r\n      return {\r\n        currentProduct: {\r\n          ...prevState.currentProduct,\r\n          pricehrk: one,\r\n          priceeur: stringeur\r\n        }\r\n      };\r\n    });\r\n\r\n    var data = {\r\n      id: this.state.currentProduct.id,\r\n      code: this.state.currentProduct.code,\r\n      name: this.state.currentProduct.name,\r\n      pricehrk: one,\r\n      priceeur: stringeur,\r\n      description: this.state.currentProduct.description,\r\n      isAvailable: this.state.currentProduct.isAvailable\r\n    };\r\n\r\n    ProductDataService.update(this.state.currentProduct.id, data)\r\n      .then(response => {\r\n        this.setState(prevState => ({\r\n          currentProduct: {\r\n            ...prevState.currentProduct,\r\n          }\r\n        }));\r\n        console.log(response.data);\r\n        this.setState({\r\n           message: \"The product was updated successfully!\"\r\n        });\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  deleteProduct() {    \r\n    ProductDataService.delete(this.state.currentProduct.id)\r\n      .then(response => {\r\n        console.log(response.data);\r\n        this.clickevent1();\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n\r\nhandleClick = event => {\r\nthis.state.currentProduct2=null;\r\nthis.state.currentIndex=-1;\r\nthis.retrieveProducts2();\r\nthis.state.submitted=false;\r\nthis.state.message=\"\";\r\n    this.setState({\r\n      currentProduct2: null,\r\n      currentIndex: -1,\r\n      message: \"\",\r\n      DataisLoaded: false,\r\n      id: null,\r\n      code: \"\",\r\n      name: \"\",\r\n      pricehrk: \"\",\r\n      priceeur: \"\",\r\n      description: \"\", \r\n      isAvailable: false,\r\n      submitted: false,\r\n      clickevent: 1\r\n    });\r\n}\r\n\r\nhandleClick1 = event => {\r\nthis.state.submitted=false;\r\nthis.state.message=\"\";\r\n    this.setState({\r\n      message: \"\",\r\n      DataisLoaded: false,\r\n      id: null,\r\n      code: \"\",\r\n      name: \"\",\r\n      pricehrk: \"\",\r\n      priceeur: \"\",\r\n      description: \"\", \r\n      isAvailable: false,\r\n      submitted: false,\r\n      clickevent: 2\r\n    });\r\n}\r\n\r\nhandleClick2 = event => {\r\nthis.getProduct(this.state.currentProduct2.id);\r\nthis.state.submitted=false;\r\nthis.state.message=\"\";\r\n    this.setState({\r\n      message: \"\",\r\n      DataisLoaded: false,\r\n      id: null,\r\n      code: \"\",\r\n      name: \"\",\r\n      pricehrk: \"\",\r\n      priceeur: \"\",\r\n      description: \"\", \r\n      isAvailable: false,\r\n      submitted: false,\r\n      clickevent: 3\r\n    });\r\n}\r\n\r\n  render() {\r\n   const {Name, products, currentProduct2, currentIndex, message, submitted, id, code, name, pricehrk, priceeur, description, isAvailable } = this.state; \r\n    return (\r\n      <div className=\"bg-light\">\r\n\r\n\t  <nav class=\"navbar navbar-light bg-light\">\r\n\t    <div>\r\n\t      <button onClick={this.handleClick.bind(this)} className=\"btn btn-outline-success btn-lg my-3 my-sm-0 mr-3\">Example</button>\r\n\t      <button onClick={this.handleClick.bind(this)} className=\"btn btn-outline-success my-2 my-sm-0 mr-2\">Products</button>\r\n\t      <button onClick={this.handleClick1.bind(this)} className=\"btn btn-outline-success my-2 my-sm-0\">Add</button>\r\n\t    </div>\r\n\t  </nav>\r\n\r\n        <div className=\"container p-3 my-3 bg-light text-black\">\r\n          <Switch>\r\n      \r\n            {(() => {\r\n      if (this.state.clickevent===1) {\r\n          return (\r\n      <div className=\"list row bg-light\">\r\n        <div className=\"col-md-8\">\r\n          <div className=\"input-group mb-3\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              placeholder=\"Search by name\"\r\n              value={this.state.searchName}\r\n              onChange={this.onChangeSearchName2}\r\n            />\r\n            <div className=\"input-group-append\">\r\n              <button\r\n                className=\"btn btn-success mb-3\"\r\n                type=\"button\"\r\n                onClick={this.searchName2}\r\n              >\r\n                Search\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-6\">\r\n          <h4>Products List</h4>\r\n\r\n          <ul className=\"list-group\">\r\n            {this.state.products &&\r\n              this.state.products.map((product, index) => (\r\n                <li\r\n                  className=\"list-group-item\"\r\n                  style={{color: (index === this.state.currentIndex ? 'white': 'black'), backgroundColor: (index === this.state.currentIndex ? 'darkgreen' : 'lightgreen')}}\r\n                  onClick={() => this.setActiveProduct2(product, index)}\r\n                  key={index}\r\n                >\r\n                  {product.name}\r\n                </li>\r\n              ))}\r\n          </ul>\r\n\r\n          <button\r\n            className=\"btn btn-success mr-1 my-3\"\r\n            onClick={this.removeAllProducts2}\r\n          >\r\n            Remove All\r\n          </button>\r\n        </div>\r\n        <div className=\"col-md-6\">\r\n          {this.state.currentProduct2 ? (\r\n            <div>\r\n              <h4>Product</h4>\r\n              <div>\r\n                <label>\r\n                  <strong>Code:</strong>\r\n                </label>{\" \"}\r\n                {this.state.currentProduct2.code}\r\n              </div>\r\n              <div>\r\n                <label>\r\n                  <strong>Name:</strong>\r\n                </label>{\" \"}\r\n                {this.state.currentProduct2.name}\r\n              </div>\r\n              <div>\r\n                <label>\r\n                  <strong>Pricehrk:</strong>\r\n                </label>{\" \"}\r\n                {this.state.currentProduct2.pricehrk}\r\n              </div>\r\n              <div>\r\n                <label>\r\n                  <strong>Priceeur:</strong>\r\n                </label>{\" \"}\r\n                {this.state.currentProduct2.priceeur}\r\n              </div>\r\n              <div>\r\n                <label>\r\n                  <strong>Description:</strong>\r\n                </label>{\" \"}\r\n                {this.state.currentProduct2.description}\r\n              </div>\r\n              <div>\r\n                <label>\r\n                  <strong>Status:</strong>\r\n                </label>{\" \"}\r\n                {this.state.currentProduct2.isAvailable ? \"IsAvailable\" : \"Pending\"}\r\n              </div>\r\n\r\n              <button\r\n                onClick={this.handleClick2.bind(this)}\r\n                className=\"btn btn-success mr-1\"\r\n              >\r\n                Edit\r\n              </button>\r\n            </div>\r\n          ) : (\r\n            <div>\r\n              <br />\r\n              <p>Please click on a Product...</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n      )}})()}\r\n\r\n            {(() => {\r\n      if (this.state.clickevent===2) {\r\n          return (\r\n       <div className=\"submit-form\">\r\n        {this.state.submitted ? (\r\n          <div>\r\n            <h4>You submitted successfully!</h4>\r\n            <button className=\"btn btn-success mr-1\" onClick={this.newProduct2}>\r\n              Add\r\n            </button>\r\n          </div>\r\n        ) : (\r\n\t    <div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"code\">Code</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"code\"\r\n                required\r\n                value={this.state.code}\r\n                onChange={this.onChangeCode2}\r\n                name=\"code\"\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"name\">Name</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"name\"\r\n                required\r\n                value={this.state.name}\r\n                onChange={this.onChangeName2}\r\n                name=\"name\"\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"pricehrk\">Pricehrk</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                style={{ textAlign: 'right' }}\r\n                id=\"pricehrk\"\r\n                required\r\n                value={this.state.pricehrk}\r\n                onChange={this.onChangePricehrk2}\r\n                name=\"pricehrk\"\r\n              />\r\n            </div>\r\n             <div className=\"form-group\">\r\n              <label htmlFor=\"priceeur\">Priceeur</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                style={{ textAlign: 'right' }}\r\n                id=\"priceeur\"\r\n                required\r\n                value={this.state.priceeur}\r\n                onChange={this.onChangePriceeur2}\r\n                name=\"priceeur\"\r\n\t\tdisabled\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"description\">Description</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"description\"\r\n                required\r\n                value={this.state.description}\r\n                onChange={this.onChangeDescription2}\r\n                name=\"description\"\r\n              />\r\n            </div>\r\n\r\n            <button onClick={this.saveProduct2} className=\"btn btn-success mr-1\">\r\n              Submit\r\n            </button>\r\n            <p>{this.state.message}</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      )}})()}\r\n\r\n            {(() => {\r\n      if (this.state.clickevent===3) {\r\n          return (\r\n      <div>\r\n        {this.state.currentProduct ? (\r\n          <div className=\"edit-form\">\r\n            <h4>Product</h4>\r\n            <form>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"code\">Code</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"code\"\r\n                  value={this.state.currentProduct.code}\r\n                  onChange={this.onChangeCode}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"name\">Name</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"name\"\r\n                  value={this.state.currentProduct.name}\r\n                  onChange={this.onChangeName}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"pricehrk\">Pricehrk</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n\t\t  style={{ textAlign: 'right' }}\r\n                  id=\"pricehrk\"\r\n                  value={this.state.currentProduct.pricehrk}\r\n                  onChange={this.onChangePricehrk}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"priceeur\">Priceeur</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  style={{ textAlign: 'right' }}\r\n                  id=\"priceeur\"\r\n                  value={this.state.currentProduct.priceeur}\r\n                  onChange={this.onChangePriceeur}\r\n                  disabled\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"description\">Description</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"description\"\r\n                  value={this.state.currentProduct.description}\r\n                  onChange={this.onChangeDescription}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label>\r\n                  <strong>Status:</strong>\r\n                </label>\r\n                {this.state.currentProduct.isAvailable ? \"isAvailable\" : \"Pending\"}\r\n              </div>\r\n            </form>\r\n\r\n            {this.state.currentProduct.isAvailable ? (\r\n              <button\r\n                className=\"btn btn-success mr-1\"\r\n                onClick={() => this.updateisAvailable(false)}\r\n              >\r\n                IsNotAvailable\r\n              </button>\r\n            ) : (\r\n              <button\r\n                className=\"btn btn-success mr-1\"\r\n                onClick={() => this.updateisAvailable(true)}\r\n              >\r\n                IsAvailable\r\n              </button>\r\n            )}\r\n\r\n            <button\r\n              className=\"btn btn-success mr-1\"\r\n              onClick={this.deleteProduct}\r\n            >\r\n              Delete\r\n            </button>\r\n\r\n            <button\r\n              type=\"submit\"\r\n              className=\"btn btn-success mr-1\"\r\n              onClick={this.updateProduct}\r\n            >\r\n              Update\r\n            </button>\r\n            <p>{this.state.message}</p>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <br />\r\n            <p>Please click on a Product...</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n\r\n      )}})()}\r\n\r\n\r\n      \r\n          </Switch>\r\n        </div>\r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\n//export default withRouter(App);","import React, { Component } from \"react\";\r\nimport ProductDataService from \"../services/product.service\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport http from \"../http-common\";\r\nimport axios from 'axios';\r\n\r\nexport default class AddProduct extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onChangeCode = this.onChangeCode.bind(this);\r\n    this.onChangeName = this.onChangeName.bind(this);\r\n    this.onChangePricehrk = this.onChangePricehrk.bind(this);\r\n    this.onChangePriceeur = this.onChangePriceeur.bind(this);\r\n    this.onChangeDescription = this.onChangeDescription.bind(this);\r\n    this.saveProduct = this.saveProduct.bind(this);\r\n    this.newProduct = this.newProduct.bind(this);\r\n\r\n    this.state = { \r\n      eurconversion: \"\",\r\n      message: \"\",\r\n      DataisLoaded: false,\r\n      id: null,\r\n      code: \"\",\r\n      name: \"\",\r\n      pricehrk: \"\",\r\n      priceeur: \"\",\r\n      description: \"\", \r\n      isAvailable: false,\r\n\r\n      submitted: false\r\n    };\r\n    this.seteurconversion();   \r\n}\r\n\r\n  seteurconversion () {\r\n    fetch('../eur_conversion')\r\n    .then((r) => r.text())\r\n    .then(text  => {\r\n      this.setState({\r\n      eurconversion: text\r\n    });\r\n    })  \r\n  } \r\n\r\n  onChangeCode(e) {\r\n    this.setState({\r\n      code: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeName(e) {\r\n    this.setState({\r\n      name: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangePricehrk(e) {\r\n    let one = e.target.value;\r\n    let two = this.state.eurconversion;\r\n    let total = one / two;\r\n    //let stringhrk = ''+one;\r\n    let stringeur = total.toFixed(2);\r\n    this.setState({\r\n      pricehrk: e.target.value,\r\n      priceeur: stringeur\r\n    });\r\n  }\r\n\r\n  onChangePriceeur(e) {\r\n    //let stringeur = ''+e.target.value;\r\n    this.setState({\r\n      priceeur: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeDescription(e) {\r\n    this.setState({\r\n      description: e.target.value\r\n    });\r\n  }\r\n\t\r\n  saveProduct() {\r\n    let one = parseFloat(this.state.pricehrk);\r\n\r\n    if (this.state.code.trim().length!=10) {\r\n        this.setState({\r\n           message: \"Code (unique) (exactly 10 character) !\"\r\n        });\r\n    return;\r\n    }\r\n\r\n    if ((this.state.pricehrk.trim() ==\"\") || (this.state.pricehrk.trim().length==0) || (isNaN(one))) {\r\n    one=0;\r\n    }\r\n \r\n    if (one<0) {\r\n    one=0;\r\n    }\r\n\r\n    one=one.toFixed(2);\r\n\r\n    let two = this.state.eurconversion;\r\n    let total = one / two;\r\n    let stringeur = total.toFixed(2);\r\n\r\n    this.setState({\r\n      pricehrk: one,\r\n      priceeur: stringeur\r\n    });\r\n\r\n    var data = {\r\n      code: this.state.code,\r\n      name: this.state.name,\r\n      pricehrk: one,\r\n      priceeur: stringeur,\r\n      description: this.state.description\r\n    };\r\n\r\n    ProductDataService.create(data)\r\n      .then(response => {\r\n        this.setState({\r\n          id: response.data.id,\r\n          code: response.data.code,\r\n          name: response.data.name,\r\n          pricehrk: response.data.pricehrk,\r\n          priceeur: response.data.priceeur,\r\n          description: response.data.description,\r\n          isAvailable: response.data.isAvailable,\r\n\r\n          submitted: true\r\n        });\r\n        this.setState({\r\n           message: \"\"\r\n        });\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  newProduct() {\r\n    this.setState({\r\n      id: null,\r\n      code: \"\",\r\n      name: \"\",\r\n      pricehrk: \"\",\r\n      priceeur: \"\",\r\n      description: \"\",\r\n      isAvailable: false,\r\n\r\n      submitted: false\r\n    });\r\n  }\r\n\r\n  render() {\r\n\r\n      return (\r\n      <div className=\"submit-form\">\r\n        {this.state.submitted ? (\r\n          <div>\r\n            <h4>You submitted successfully!</h4>\r\n            <button className=\"btn btn-success mr-1\" onClick={this.newProduct}>\r\n              Add\r\n            </button>\r\n          </div>\r\n        ) : (\r\n\t    <div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"code\">Code</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"code\"\r\n                required\r\n                value={this.state.code}\r\n                onChange={this.onChangeCode}\r\n                name=\"code\"\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"name\">Name</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"name\"\r\n                required\r\n                value={this.state.name}\r\n                onChange={this.onChangeName}\r\n                name=\"name\"\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"pricehrk\">Pricehrk</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                style={{ textAlign: 'right' }}\r\n                id=\"pricehrk\"\r\n                required\r\n                value={this.state.pricehrk}\r\n                onChange={this.onChangePricehrk}\r\n                name=\"pricehrk\"\r\n              />\r\n            </div>\r\n             <div className=\"form-group\">\r\n              <label htmlFor=\"priceeur\">Priceeur</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                style={{ textAlign: 'right' }}\r\n                id=\"priceeur\"\r\n                required\r\n                value={this.state.priceeur}\r\n                onChange={this.onChangePriceeur}\r\n                name=\"priceeur\"\r\n\t\tdisabled\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"description\">Description</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"description\"\r\n                required\r\n                value={this.state.description}\r\n                onChange={this.onChangeDescription}\r\n                name=\"description\"\r\n              />\r\n            </div>\r\n\r\n            <button onClick={this.saveProduct} className=\"btn btn-success mr-1\">\r\n              Submit\r\n            </button>\r\n            <p>{this.state.message}</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport ProductDataService from \"../services/product.service\";\r\n\r\nexport default class Product extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onChangeCode = this.onChangeCode.bind(this);\r\n    this.onChangeName = this.onChangeName.bind(this);\r\n    this.onChangePricehrk = this.onChangePricehrk.bind(this);\r\n    this.onChangePriceeur = this.onChangePriceeur.bind(this);\r\n    this.onChangeDescription = this.onChangeDescription.bind(this);\r\n    this.getProduct = this.getProduct.bind(this);\r\n    this.updateisAvailable = this.updateisAvailable.bind(this);\r\n    this.updateProduct = this.updateProduct.bind(this);\r\n    this.deleteProduct = this.deleteProduct.bind(this);\r\n\r\n    this.state = {\r\n      currentProduct: {\r\n        id: null,\r\n        code: \"\",\r\n        name: \"\",\r\n        pricehrk: \"\",\r\n        priceeur: \"\",\r\n        description: \"\",\r\n        isAvailable: false\r\n      },\r\n      eurconversion: \"\",\r\n      message: \"\"\r\n    }; \r\n    this.seteurconversion();   \r\n  }\r\n\r\n  seteurconversion () {\r\n    fetch('../eur_conversion')\r\n    .then((r) => r.text())\r\n    .then(text  => {\r\n      this.setState({\r\n      eurconversion: text\r\n    });\r\n    })  \r\n  } \r\n\r\n  componentDidMount() {\r\n    this.getProduct(this.props.match.params.id);\r\n  }\r\n\r\n  onChangeCode(e) {\r\n    const code = e.target.value;\r\n\r\n    this.setState(function(prevState) {\r\n      return {\r\n        currentProduct: {\r\n          ...prevState.currentProduct,\r\n          code: code\r\n        }\r\n      };\r\n    });\r\n  }\r\n\r\n  onChangeName(e) {\r\n    const name = e.target.value;\r\n\r\n    this.setState(function(prevState) {\r\n      return {\r\n        currentProduct: {\r\n          ...prevState.currentProduct,\r\n          name: name\r\n        }\r\n      };\r\n    });\r\n  }\r\n\r\n  onChangePricehrk(e) {\r\n    const pricehrk = e.target.value;\r\n\r\n    let one = e.target.value;\r\n    let two = this.state.eurconversion;\r\n    let total = one / two;\r\n    let stringeur = total.toFixed(2);\r\n\r\n    this.setState(function(prevState) {\r\n      return {\r\n        currentProduct: {\r\n          ...prevState.currentProduct,\r\n          pricehrk: pricehrk,\r\n          priceeur: stringeur\r\n        }\r\n      };\r\n    });\r\n  }\r\n\r\n  onChangePriceeur(e) {\r\n    const priceeur = e.target.value;\r\n\r\n    this.setState(function(prevState) {\r\n      return {\r\n        currentProduct: {\r\n          ...prevState.currentProduct,\r\n          priceeur: priceeur\r\n        }\r\n      };\r\n    });\r\n  }\r\n\r\n  onChangeDescription(e) {\r\n    const description = e.target.value;\r\n    \r\n    this.setState(prevState => ({\r\n      currentProduct: {\r\n        ...prevState.currentProduct,\r\n        description: description\r\n      }\r\n    }));\r\n  }\r\n\r\n  getProduct(id) {\r\n    ProductDataService.get(id)\r\n      .then(response => {\r\n        this.setState({\r\n          currentProduct: response.data\r\n        });\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  updateisAvailable(status) {\r\n    let one = parseFloat(this.state.currentProduct.pricehrk);\r\n    \r\n    if (this.state.currentProduct.code.trim().length!=10) {\r\n        this.setState({\r\n           message: \"Code (unique) (exactly 10 character) !\"\r\n        });\r\n    return;\r\n    }\r\n\r\n    if ((this.state.currentProduct.pricehrk.trim() ==\"\") || (this.state.currentProduct.pricehrk.trim().length==0) || (isNaN(one))) {\r\n    one=0;\r\n    }\r\n\r\n    if (one<0) {\r\n    one=0;\r\n    }\r\n\r\n    one=one.toFixed(2);\r\n\r\n    let two = this.state.eurconversion;\r\n    let total = one / two;\r\n    let stringeur = total.toFixed(2);\r\n\r\n    this.setState(function(prevState) {\r\n      return {\r\n        currentProduct: {\r\n          ...prevState.currentProduct,\r\n          pricehrk: one,\r\n          priceeur: stringeur\r\n        }\r\n      };\r\n    });\r\n\r\n    var data = {\r\n      id: this.state.currentProduct.id,\r\n      code: this.state.currentProduct.code,\r\n      name: this.state.currentProduct.name,\r\n      pricehrk: one,\r\n      priceeur: stringeur,\r\n      description: this.state.currentProduct.description,\r\n      isAvailable: status\r\n    };\r\n\r\n    ProductDataService.update(this.state.currentProduct.id, data)\r\n      .then(response => {\r\n        this.setState(prevState => ({\r\n          currentProduct: {\r\n            ...prevState.currentProduct,\r\n            isAvailable: status\r\n          }\r\n        }));\r\n                if (status) {\r\n           \t   this.setState({\r\n                      message: \"Product is available !\"\r\n                   });\r\n\t\t} else\r\n                {\r\n           \t   this.setState({\r\n                      message: \"Product is not available !\"\r\n                   });\r\n\t\t}\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  updateProduct() {\r\n    let one = parseFloat(this.state.currentProduct.pricehrk);\r\n\r\n    if (this.state.currentProduct.code.trim().length!=10) {\r\n        this.setState({\r\n           message: \"Code (unique) (exactly 10 character) !\"\r\n        });\r\n        return;\r\n    }\r\n\r\n    if ((this.state.currentProduct.pricehrk.trim() ==\"\") || (this.state.currentProduct.pricehrk.trim().length==0) || (isNaN(one))) {\r\n    one=0;\r\n    }\r\n\r\n    if (one<0) {\r\n    one=0;\r\n    }\r\n\r\n    one=one.toFixed(2);\r\n    let two = this.state.eurconversion;\r\n    let total = one / two;\r\n    let stringeur = total.toFixed(2);\r\n\r\n    this.setState(function(prevState) {\r\n      return {\r\n        currentProduct: {\r\n          ...prevState.currentProduct,\r\n          pricehrk: one,\r\n          priceeur: stringeur\r\n        }\r\n      };\r\n    });\r\n\r\n    var data = {\r\n      id: this.state.currentProduct.id,\r\n      code: this.state.currentProduct.code,\r\n      name: this.state.currentProduct.name,\r\n      pricehrk: one,\r\n      priceeur: stringeur,\r\n      description: this.state.currentProduct.description,\r\n      isAvailable: this.state.currentProduct.isAvailable\r\n    };\r\n\r\n    ProductDataService.update(this.state.currentProduct.id, data)\r\n      .then(response => {\r\n        this.setState(prevState => ({\r\n          currentProduct: {\r\n            ...prevState.currentProduct,\r\n          }\r\n        }));\r\n        console.log(response.data);\r\n        this.setState({\r\n           message: \"The product was updated successfully!\"\r\n        });\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  deleteProduct() {    \r\n    ProductDataService.delete(this.state.currentProduct.id)\r\n      .then(response => {\r\n        console.log(response.data);\r\n        this.props.history.push('/products')\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { currentProduct } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        {currentProduct ? (\r\n          <div className=\"edit-form\">\r\n            <h4>Product</h4>\r\n            <form>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"code\">Code</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"code\"\r\n                  value={currentProduct.code}\r\n                  onChange={this.onChangeCode}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"name\">Name</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"name\"\r\n                  value={currentProduct.name}\r\n                  onChange={this.onChangeName}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"pricehrk\">Pricehrk</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n\t\t  style={{ textAlign: 'right' }}\r\n                  id=\"pricehrk\"\r\n                  value={currentProduct.pricehrk}\r\n                  onChange={this.onChangePricehrk}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"priceeur\">Priceeur</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  style={{ textAlign: 'right' }}\r\n                  id=\"priceeur\"\r\n                  value={currentProduct.priceeur}\r\n                  onChange={this.onChangePriceeur}\r\n                  disabled\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"description\">Description</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"description\"\r\n                  value={currentProduct.description}\r\n                  onChange={this.onChangeDescription}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label>\r\n                  <strong>Status:</strong>\r\n                </label>\r\n                {currentProduct.isAvailable ? \"isAvailable\" : \"Pending\"}\r\n              </div>\r\n            </form>\r\n\r\n            {currentProduct.isAvailable ? (\r\n              <button\r\n                className=\"btn btn-success mr-1\"\r\n                onClick={() => this.updateisAvailable(false)}\r\n              >\r\n                IsNotAvailable\r\n              </button>\r\n            ) : (\r\n              <button\r\n                className=\"btn btn-success mr-1\"\r\n                onClick={() => this.updateisAvailable(true)}\r\n              >\r\n                IsAvailable\r\n              </button>\r\n            )}\r\n\r\n            <button\r\n              className=\"btn btn-success mr-1\"\r\n              onClick={this.deleteProduct}\r\n            >\r\n              Delete\r\n            </button>\r\n\r\n            <button\r\n              type=\"submit\"\r\n              className=\"btn btn-success mr-1\"\r\n              onClick={this.updateProduct}\r\n            >\r\n              Update\r\n            </button>\r\n            <p>{this.state.message}</p>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <br />\r\n            <p>Please click on a Product...</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component, useState, useEffect, useNavigate } from \"react\";\r\nimport ProductDataService from \"../services/product.service\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\nexport default class ProductsList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onChangeSearchName = this.onChangeSearchName.bind(this);\r\n    this.retrieveProducts = this.retrieveProducts.bind(this);\r\n    this.refreshList = this.refreshList.bind(this);\r\n    this.setActiveProduct = this.setActiveProduct.bind(this);\r\n    this.removeAllProducts = this.removeAllProducts.bind(this);\r\n    this.searchName = this.searchName.bind(this);\r\n\r\n    this.state = {\r\n      products: [],\r\n      currentProduct: null,\r\n      currentIndex: -1,\r\n      searchName: \"\"\r\n    };   \r\n  }\r\n\r\n  componentDidMount() {\r\n    this.retrieveProducts();\r\n  }\r\n\r\n  onChangeSearchName(e) {\r\n    const searchName = e.target.value;\r\n\r\n    this.setState({\r\n      searchName: searchName\r\n    });\r\n  }\r\n\r\n  retrieveProducts() {\r\n    ProductDataService.getAll()\r\n      .then(response => {\r\n        this.setState({\r\n          products: response.data\r\n        });\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  refreshList() {\r\n    this.retrieveProducts();\r\n    this.setState({\r\n      currentProduct: null,\r\n      currentIndex: -1\r\n    });\r\n  }\r\n\r\n  setActiveProduct(product, index) {\r\n    this.setState({\r\n      currentProduct: product,\r\n      currentIndex: index\r\n    });\r\n  }\r\n\r\n  removeAllProducts() {\r\n    ProductDataService.deleteAll()\r\n      .then(response => {\r\n        console.log(response.data);\r\n        this.refreshList();\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  searchName() {\r\n    this.setState({\r\n      currentProduct: null,\r\n      currentIndex: -1\r\n    });\r\n\r\n    ProductDataService.findByName(this.state.searchName)\r\n      .then(response => {\r\n        this.setState({\r\n          products: response.data\r\n        });\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { searchName, products, currentProduct, currentIndex } = this.state;\r\n\r\n    return (\r\n      <div className=\"list row bg-light\">\r\n        <div className=\"col-md-8\">\r\n          <div className=\"input-group mb-3\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              placeholder=\"Search by name\"\r\n              value={searchName}\r\n              onChange={this.onChangeSearchName}\r\n            />\r\n            <div className=\"input-group-append\">\r\n              <button\r\n                className=\"btn btn-success mb-3\"\r\n                type=\"button\"\r\n                onClick={this.searchName}\r\n              >\r\n                Search\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-6\">\r\n          <h4>Products List</h4>\r\n\r\n          <ul className=\"list-group\">\r\n            {products &&\r\n              products.map((product, index) => (\r\n                <li\r\n                  className=\"list-group-item\"\r\n                  style={{color: (index === currentIndex ? 'white': 'black'), backgroundColor: (index === currentIndex ? 'darkgreen' : 'lightgreen')}}\r\n                  onClick={() => this.setActiveProduct(product, index)}\r\n                  key={index}\r\n                >\r\n                  {product.name}\r\n                </li>\r\n              ))}\r\n          </ul>\r\n\r\n          <button\r\n            className=\"btn btn-success mr-1 my-3\"\r\n            onClick={this.removeAllProducts}\r\n          >\r\n            Remove All\r\n          </button>\r\n        </div>\r\n        <div className=\"col-md-6\">\r\n          {currentProduct ? (\r\n            <div>\r\n              <h4>Product</h4>\r\n              <div>\r\n                <label>\r\n                  <strong>Code:</strong>\r\n                </label>{\" \"}\r\n                {currentProduct.code}\r\n              </div>\r\n              <div>\r\n                <label>\r\n                  <strong>Name:</strong>\r\n                </label>{\" \"}\r\n                {currentProduct.name}\r\n              </div>\r\n              <div>\r\n                <label>\r\n                  <strong>Pricehrk:</strong>\r\n                </label>{\" \"}\r\n                {currentProduct.pricehrk}\r\n              </div>\r\n              <div>\r\n                <label>\r\n                  <strong>Priceeur:</strong>\r\n                </label>{\" \"}\r\n                {currentProduct.priceeur}\r\n              </div>\r\n              <div>\r\n                <label>\r\n                  <strong>Description:</strong>\r\n                </label>{\" \"}\r\n                {currentProduct.description}\r\n              </div>\r\n              <div>\r\n                <label>\r\n                  <strong>Status:</strong>\r\n                </label>{\" \"}\r\n                {currentProduct.isAvailable ? \"IsAvailable\" : \"Pending\"}\r\n              </div>\r\n\r\n              <Link\r\n                to={\"/products/\" + currentProduct.id}\r\n                className=\"btn btn-success mr-1\"\r\n              >\r\n                Edit\r\n              </Link>\r\n            </div>\r\n          ) : (\r\n            <div>\r\n              <br />\r\n              <p>Please click on a Product...</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","const isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { HashRouter, Route } from \"react-router-dom\";\r\n\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nimport ProductsList from \"./components/products-list.component\";\r\n\r\nReactDOM.render(\r\n  <HashRouter>\r\n     <Route path=\"/\" component={ App }/>\r\n  </HashRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}